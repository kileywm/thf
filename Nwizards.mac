#include Spell_routines.inc
#include actions.inc

Sub Main
  |----Detect Items------------------------------------------------------
  #include clickies.inc

  |----Detect Group Leaders------------------------------------------------------
  #include groups.inc

  /declare Command string outer
  /declare Action string outer Nothing
  /declare ChangeAction bool outer FALSE
  /declare NewTarget bool outer TRUE
  /declare RaidTarg int outer
  /declare NewRaidTarg int outer
  /declare RaidTargType string outer
  /declare HealTarg int outer
  /declare Arg1 string outer
  /declare Arg2 string outer
  /declare Arg3 string outer
  /declare Arg4 string outer

  /declare ExpCheck timer outer ${Math.Calc[${Math.Rand[100]}+200+${Me.Class.ID}]}
  /declare j int outer 0
  /if (!${Defined[Listening]}) /declare Listening bool outer TRUE
  /declare MaintainIllusion bool outer FALSE
  /declare ClassType string outer
  /declare ChangeMelody bool outer TRUE
  /declare Selos bool outer TRUE
  /declare DiscActivate timer outer
  /declare IntroAttack bool outer TRUE
  /declare TryAttempts int outer 0
  /declare AA1Timer timer outer 0
  /declare LastZone int outer ${Zone.ID}
  /declare ZoneChange bool outer FALSE

  /declare PetStatus int outer 0
  /declare PetBaneWeap timer outer 0
  /declare AutoPet bool outer TRUE
  /declare AutoPosition bool outer TRUE
  /declare AutoDisc bool outer FALSE

  /declare DebuffTimer timer outer 0
  /declare Dot1Timer timer outer 0
  /declare Dot2Timer timer outer 0
  /declare Dot3Timer timer outer 0
  /declare Dot4Timer timer outer 0
  /declare Dot5Timer timer outer 0
  /declare Dot6Timer timer outer 0
  /declare PurgeCrapBuffsTimer timer outer 0

  /declare TankCheck timer outer 0

  /echo [${Time.Time24}] Macro active...
  /call DetectGems
  /call CheckGems
  /call DetectSpells
  /call Settings
  /if (${Melee.Enable}) /melee off

  :Loop
  /if (${MacroQuest.GameState.Equal[INGAME]}) {
    /doevents
    /if (${Command.Length}>0) {
      /if (${Listening}) {
        /varset Action ${Command}
        /varset ChangeAction TRUE
      }
      /varset Command
    }
    /if (${NewRaidTarg}>0) {
      /if (${Listening}) {
        /varset RaidTarg ${NewRaidTarg}
      }
      /varset NewRaidTarg 0
    }

    /if ((${Zone.ID} && ${Zone.ID}!=${LastZone}) || ${ZoneChange}) {
      /varset ZoneChange TRUE
      /call ZoneChange
    }
    
    /if (${Action.NotEqual[Nothing]}) {
      /if (${ChangeAction}) /varset ChangeAction FALSE
      /if (${Action.NotEqual[Idle]} && ${MacroQuest.GameState.Equal[INGAME]}) /call ${Action}
      /if (!${ChangeAction}) {
        /if (${Cursor.ID} && ${Action.Equal[Combat]}) /autoinv
        /doevents
        /if (!${ChangeAction} && ${MacroQuest.GameState.Equal[INGAME]}) /call CheckGems
        /doevents
        /if (!${ChangeAction} && ${MacroQuest.GameState.Equal[INGAME]}) /call CheckLevels
        /doevents
        /if (!${ChangeAction} && ${MacroQuest.GameState.Equal[INGAME]}) /call CheckStatus
        /doevents
        /if (!${ChangeAction} && ${MacroQuest.GameState.Equal[INGAME]}) /call CheckBuffs
        /doevents
      }
    }
  }
  /goto :Loop

Sub CheckLevels
  /if (${ExpCheck}==0) /call BalExp

|--Survival---------------------------------------------------------------------

  /if (${Action.Equal[Combat]} && ${Me.PctHPs}<50 && ${Defined[NadoxGloves]} && ${NadoxGlovesTimer}==0 && ${Target.Distance}<${Math.Calc[${NadoxGlovesRange}*${RangeMod}]}) {
    /echo [${Time.Time24}] Clicking ${NadoxGloves}
    /call cast ${NadoxGloves}
    /if (${Macro.Return.Equal[CAST_SUCCESS]}) {
      /varset NadoxGlovesTimer 4800
    } else {
      /varset NadoxGlovesTimer 600
    }
  }

  /if (${Me.TargetOfTarget.ID}==${Me.ID} && ${Target.ID}!=${Me.ID} && ${Target.Distance}<20 && ${NearestSpawn[2,pc].Distance}<25) {
    /call WaitForSpellReady ${AggroDrop}
    /call cast ${AggroDrop}
  }

|--Mana Clickies----------------------------------------------------------------

  /if (${Action.Equal[Combat]} && ${Defined[T8Chest]} && ${FindItem[${T8Chest}].Timer}==0 && ${Me.PctMana}<60) {
    /echo [${Time.Time24}] Clicking ${T8Chest}
    /call cast ${T8Chest} item
  }
  /if (${Defined[ManaBracer]} && ${ManaBracerTimer}==0 && ${Action.NotEqual[Killnear]}) {
    /echo [${Time.Time24}] Clicking ${ManaBracer}
    /call cast ${ManaBracer} item
    /varset ManaBracerTimer 96
    /return
  }
  /if (${Defined[AvilaineStaff]} && ${AvilaineStaffTimer}==0 && ${Action.NotEqual[Killnear]}) {
    /echo [${Time.Time24}] Clicking ${AvilaineStaff}
    /call cast ${AvilaineStaff} item
    /varset AvilaineStaffTimer 300
  }
  /if (${Defined[ZenurixStone]} && ${Me.PctMana}<40 && ${FindItem[${ZenurixStone}].Timer}==0) {
    /echo [${Time.Time24}] Clicking ${ZenurixStone}
    /call cast ${ZenurixStone} item
  }
  /if (${Defined[ArbiterBelt]} && ${Me.PctMana}<40 && ${ArbiterBeltTimer}==0) {
    /echo [${Time.Time24}] Clicking ${ArbiterBelt}
    /call cast ${ArbiterBelt} item
    /varset ArbiterBeltTimer 600
  }
  /if (${Defined[ManaTears]} && ${Me.PctMana}<40 && ${ManaTearsTimer}==0) {
    /echo [${Time.Time24}] Clicking ${ManaTears}
    /call cast ${ManaTears} item
    /varset ManaTearsTimer 4200
  }
  /if (${Defined[ManaGather]} && ${Me.PctMana}<50 && ${Me.SpellReady[${ManaGather}]}) {
    /echo [${Time.Time24}] Casting ${ManaGather}
    /call cast ${ManaGather}
    /return
  }
/return

Sub CheckGems
  /if ((${Gem1} && !${Me.Gem[1].ID}) || (${Gem2} && !${Me.Gem[2].ID}) || (${Gem3} && !${Me.Gem[3].ID}) || (${Gem4} && !${Me.Gem[4].ID}) || (${Gem5} && !${Me.Gem[5].ID}) || (${Gem6} && !${Me.Gem[6].ID}) || (${Gem7} && !${Me.Gem[7].ID}) || (${Gem8} && !${Me.Gem[8].ID}) || (${Gem9} && !${Me.Gem[9].ID})) {
    /echo [${Time.Time24}] Memming spells
    /memspellset ${SpellSet}
    /delay 5
    :WaitForMem
    /if (${Window[SpellBookWnd].Open}) {
      /delay 1
      /goto :WaitForMem
    }
    /call DetectSpells
  }
/return

Sub CheckBuffs
  /if (!${Defined[Draekon]}) {
    /if (!${Me.Buff[Ro's Greater Familiar].ID} && ${AA1Timer}==0) {
      /echo [${Time.Time24}] Summoning Ro's Greater Familiar
      /call cast "Ro's Greater Familiar" alt
      /varset AA1Timer ${Math.Calc[${AltAbility[Ro's Greater Familiar].ReuseTime}*10]}
      /delay 5
      /pet get lost
      /return
    }
    /if (${Defined[DonorWeapon10]} && !${Me.Buff[${DonorWeapon10Buff}].ID} && ${DonorWeapon10Timer}==0) {
      /echo [${Time.Time24}] Clicking ${DonorWeapon10} familiar
      /call cast ${DonorWeapon10} item
      /if (!${Macro.Return.Equal[CAST_INTERRUPTED]}) {
        /varset DonorWeapon10Timer 1800
      }
      /delay 2
      /pet get lost
      /return
    }
    /if (${Defined[DonorWeapon20]} && !${Me.Buff[${DonorWeapon20Buff}].ID} && ${DonorWeapon20Timer}==0) {
      /echo [${Time.Time24}] Clicking ${DonorWeapon20} familiar
      /call cast ${DonorWeapon20} item
      /if (!${Macro.Return.Equal[CAST_INTERRUPTED]}) {
        /varset DonorWeapon20Timer 2400
      }
      /delay 2
      /pet get lost
      /return
    }
    /if (${Defined[CritShoulder]} && !${Me.Buff[${CritShoulderBuff}].ID}) {
      /echo [${Time.Time24}] Rebuffing ${CritShoulderBuff}
      /call cast ${CritShoulder} item
      /return
    }
    /if (${Defined[CritMask]} && !${Me.Buff[${CritMaskBuff}].ID}) {
      /echo [${Time.Time24}] Rebuffing ${CritMaskBuff}
      /call cast ${CritMask} item
      /return
    }
    /if (${Defined[LichClicky]} && !${Me.Buff[${LichBuff}].ID}) {
      /echo [${Time.Time24}] Buffing ${LichBuff}
      /call cast ${LichClicky} item
      /return
    }
    /if (${Defined[BPIllusion]} && ${MaintainIllusion} && !${Me.Buff[${BPIllusionBuff}].ID} && !${Me.Song[Form of the Moon Cursed].ID} ) {
      /echo [${Time.Time24}] Buffing ${BPIllusion}
      /call cast ${BPIllusion} item
      /return
    }
    /if (${Defined[SpellHateNeck]} && !${Me.Buff[${SpellHateNeckBuff}].ID}  && ${SpellHateNeckTimer}==0) {
      /echo [${Time.Time24}] Buffing ${SpellHateNeckBuff}
      /call cast ${SpellHateNeck} item
      /varset SpellHateNeckTimer 6000
      /return
    }
    /if (${Defined[DestChaosMask]} && !${Me.Buff[${DestChaosMaskBuff}].ID}) {
      /echo [${Time.Time24}] Clicking ${DestChaosMask}
      /call cast ${DestChaosMask} item
      /return
    }
    /if (${Defined[WoSPet]} && !${Me.Buff[${WoSPetBuff}].ID}  && ${WoSPetTimer}==0) {
      /declare HasPet bool local FALSE
      /if (${Me.Pet.ID}) /varset HasPet TRUE
      /echo [${Time.Time24}] Buffing ${WoSPetBuff}
      /call cast ${WoSPet} item
      /if (!${Macro.Return.Equal[CAST_INTERRUPTED]}) {
        /varset WoSPetTimer 6000
        /delay 5
        /if (!${HasPet}) /pet get lost
      } else {
        /varset WoSPetTimer 300
      }
      /return
    }
    /if (${Action.Equal[Combat]} && !${Me.Buff[Mana Inferno Rk. III].ID} && !${Me.Buff[Mana Inferno Rk. II].ID} && !${Me.Buff[Mana Inferno Rk. I].ID} && ${InfernoNeckTimer}==0) {
      /echo [${Time.Time24}] Clicking ${InfernoNeck}
      /call cast ${InfernoNeck} item
      /if (!${Macro.Return.Equal[CAST_INTERRUPTED]}) {
        /varset InfernoNeckTimer 9000
      }
    }
    /if (!${Me.Buff[Visions of Power Rk. III].ID} && !${Me.Buff[Visions of Power Rk. II].ID} && !${Me.Buff[Visions of Power Rk. I].ID} && !${Me.Buff[${TwincastBuff}].ID} && ${Me.SpellReady[${TwincastBuff}]} && ${Spell[${TwincastBuff}].Mana}<${Me.CurrentMana}) {
      /echo [${Time.Time24}] Buffing ${TwincastBuff}
      /call cast ${TwincastBuff}
      /return
    }
  }

/return

Sub Combat
  /if (!${Spawn[id ${RaidTarg}].ID} || ${Spawn[id ${RaidTarg}].Type.Equal[Corpse]}) {
    /if (${Action.Equal[Combat]}) {
      /varset Action Hold
    }
    /varset ChangeAction TRUE
    /call CheckBoss
    /return
  } else /if (${Spawn[id ${RaidTarg}].ID} &&  (!${Target.ID} || ${Target.ID}!=${RaidTarg})) {
    /squelch /tar ID ${RaidTarg}
    /delay 3
  }

  /if (${NewTarget}) {
    /echo [${Time.Time24}] Attacking...
    /call CheckBoss
    /varset IntroAttack TRUE
    /varset NewTarget FALSE
    /varset DebuffTimer 0
  }

  /if (${Action.Equal[Combat]} && (${Target.Type.NotEqual[NPC]} || !${Target.ID})) {
    /varset ChangeAction TRUE
    /varset Action Hold
    /call CheckBoss
    /return
  }

  /if (${Me.TargetOfTarget.ID}==${Me.ID}) {
    /if (${NearestSpawn[2,pc].ID} && ${NearestSpawn[2,pc].Distance}<25) {
      /if (${Defined[DonorFD]}) {
        /echo [${Time.Time24}] Shit have aggro! Clicking ${DonorFD}.
        /call cast ${DonorFD} item
        /delay 5
        /stand
      } else /if (${Defined[DraekonShoulder]} && ${DraekonShoulderTimer}==0) {
        /echo [${Time.Time24}] Shit have aggro! Clicking ${DraekonShoulder}.
        /call cast ${DraekonShoulder} item
        /varset DraekonShoulderTimer 2986
      }
    }
  }

  /if (${Defined[RallosZek]} && ${Defined[ZekBane]} && ${ZekTimer}==0 && ${Target.Distance}<${Math.Calc[${ZekBaneRange}*${RangeMod}]}) {
    /echo [${Time.Time24}] Using ${ZekBane} on Rallos Zek!
    /call cast ${ZekBane} item
    /varset ZekTimer 41
    /return
  }

  /if (${Defined[DonorLeg]} && ${FindItem[${DonorLeg}].Timer}==0) {
    /echo [${Time.Time24}] Clicking ${DonorLeg}
    /call cast ${DonorLeg} item
    /return
  }

  /if (!${Defined[Vule]} && ${FindItemCount[${BoomStick}]} && ${FindItem[${BoomStick}].Timer}==0 && ${Target.Distance}<${Math.Calc[${BoomStickRange}*${RangeMod}]}) {
    /echo [${Time.Time24}] Clicking ${BoomStick}
    /call cast ${BoomStick} item
    /return
  }

  /if (${Defined[Epic15]} && ${FindItem[${Epic15}].Timer}==0 && ${Target.Distance}<${Math.Calc[${Epic15Range}*${RangeMod}]}) {
    /echo [${Time.Time24}] Clicking ${Epic15}
    /call cast ${Epic15} item
    /return
  }

  /if (${Defined[Epic20]} && ${FindItem[${Epic20}].Timer}==0 && ${Target.Distance}<${Math.Calc[${Epic20Range}*${RangeMod}]}) {
    /echo [${Time.Time24}] Clicking ${Epic20}
    /call cast ${Epic20} item
    /return
  }

  /if (${Defined[VulthrixWhip]} && ${FindItem[${VulthrixWhip}].Timer}==0 && ${Target.Distance}<${Math.Calc[${VulthrixWhipRange}*${RangeMod}]}) {
    /echo [${Time.Time24}] Clicking ${VulthrixWhip}
    /call cast ${VulthrixWhip} item
    /return
  }

  /if (${Defined[NadoxShield]} && ${FindItem[${NadoxShield}].Timer}==0 && ${Target.Distance}<${Math.Calc[${NadoxShieldRange}*${RangeMod}]}) {
    /echo [${Time.Time24}] Clicking ${NadoxShield}
    /call cast ${NadoxShield} item
    /return
  }

  /if (${Defined[NadoxEar]} && ${NadoxEarTimer}==0 && ${Target.Distance}<${Math.Calc[${NadoxEarRange}*${RangeMod}]}) {
    /echo [${Time.Time24}] Clicking ${NadoxEar}
    /call cast ${NadoxEar} item
    /varset NadoxEarTimer 600
    /return
  }

  /if (${Defined[DSKear]} && ${FindItem[${DSKear}].Timer}==0 && ${Target.Distance}<${Math.Calc[${DSKearRange}*${RangeMod}]}) {
    /echo [${Time.Time24}] Clicking ${DSKear}
    /call cast ${DSKear} item
    /return
  }

  /if (${Defined[ZenurixEar]} && ${FindItem[${ZenurixEar}].Timer}==0 && ${Target.Distance}<${Math.Calc[${ZenurixEarRange}*${RangeMod}]}) {
    /echo [${Time.Time24}] Clicking ${ZenurixEar}
    /call cast ${ZenurixEar} item
    /return
  }

  /if (${Me.SpellReady[${Instant1}]} && ${Target.Distance}<${Math.Calc[${Spell[${Instant1}].Range}*${RangeMod}]} && ${Spell[${Instant1}].Mana}<${Me.CurrentMana}) {
    /echo [${Time.Time24}] Casting ${Instant1}
    /call cast ${Instant1}
    /return
  }

  /if (${Me.SpellReady[${Instant2}]} && ${Target.Distance}<${Math.Calc[${Spell[${Instant2}].Range}*${RangeMod}]} && ${Spell[${Instant2}].Mana}<${Me.CurrentMana}) {
    /echo [${Time.Time24}] Casting ${Instant2}
    /call cast ${Instant2}
    /return
  }

  /if (${Me.SpellReady[${Instant3}]} && ${Target.Distance}<${Math.Calc[${Spell[${Instant3}].Range}*${RangeMod}]} && ${Spell[${Instant3}].Mana}<${Me.CurrentMana}) {
    /echo [${Time.Time24}] Casting ${Instant3}
    /call cast ${Instant3}
    /return
  }

  /if (${Me.SpellReady[${LongNuke}]} && ${Target.Distance}<${Math.Calc[${Spell[${LongNuke}].Range}*${RangeMod}]} && ${Spell[${LongNuke}].Mana}<${Me.CurrentMana}) {
    /echo [${Time.Time24}] Casting ${LongNuke}
    /call cast ${LongNuke}
    /return
  }

/return

Sub Burn
  /if (${Defined[TwinsRing]} && ${FindItem[${TwinsRing}].Timer}==0) {
    /echo [${Time.Time24}] Clicking ${TwinsRing}
    /call cast ${TwinsRing} item
  }

  /varset Action Combat
/return

Sub ShortBuff
  /if (!${ChangeAction} && ${Action.Equal[ShortBuff]}) {
    /varset ChangeAction TRUE
    /varset Action Nothing
  }
/return

Sub LongBuff
  /if (!${ChangeAction} && ${Action.Equal[LongBuff]}) {
    /varset ChangeAction TRUE
    /varset Action Nothing
  }
/return

Sub DetectSpells

|----Detect Spells------------------------------------------------------
    /call FindRank "Flame Blaze Rk."
    /if (${Macro.Return.Length}>3 && !${Defined[Instant1]}) /declare Instant1 string outer ${Macro.Return}

    /call FindRank "Gelid Strike Rk."
    /if (${Macro.Return.Length}>3 && !${Defined[Instant2]}) /declare Instant2 string outer ${Macro.Return}

    /call FindRank "Storm Strike Rk."
    /if (${Macro.Return.Length}>3 && !${Defined[Instant3]}) /declare Instant3 string outer ${Macro.Return}

    /call FindRank "Concussive Strike Rk."
    /if (${Macro.Return.Length}>3 && !${Defined[AggroDrop]}) /declare AggroDrop string outer ${Macro.Return}

    /call FindRank "Insidious Harvest Rk."
    /if (${Macro.Return.Length}>3 && !${Defined[ManaGather]}) /declare ManaGather string outer ${Macro.Return}

    /call FindRank "Sorcerer's Veil Rk."
    /if (${Macro.Return.Length}>3 && !${Defined[TwincastBuff]}) /declare TwincastBuff string outer ${Macro.Return}

    /if (${Me.Gem[Chaotic Detonation]}>0 && !${Defined[LongNuke]}) /declare LongNuke string outer "Chaotic Detonation"

/return
